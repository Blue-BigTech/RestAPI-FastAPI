"""added states

Revision ID: f22619174873
Revises: c7c71667439f
Create Date: 2022-12-21 10:30:03.035887

"""
from alembic import op
import sqlalchemy as sa
from geoalchemy2 import Geometry

# revision identifiers, used by Alembic.
revision = "f22619174873"
down_revision = "c7c71667439f"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_geospatial_table(  # type: ignore
        "states",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "geom",
            Geometry(
                geometry_type="POLYGON",
                spatial_index=False,
                from_text="ST_GeomFromEWKT",
                name="geometry",
            ),
            nullable=False,
        ),
        sa.Column("name", sa.String(), nullable=True),
        sa.Column("admin", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_geospatial_index(  # type: ignore
        "idx_states_geom",
        "states",
        ["geom"],
        unique=False,
        postgresql_using="gist",
        postgresql_ops={},
    )
    op.create_index(op.f("ix_states_id"), "states", ["id"], unique=False)
    op.alter_column("calendar_data", "farm", existing_type=sa.VARCHAR(), nullable=True)
    op.create_index(op.f("ix_companies_email"), "companies", ["email"], unique=True)
    op.create_index(op.f("ix_companies_id"), "companies", ["id"], unique=False)
    op.alter_column("crop_stages", "stages", existing_type=sa.VARCHAR(), nullable=False)
    op.alter_column("crop_stages", "tasks", existing_type=sa.VARCHAR(), nullable=False)
    op.add_column("farm", sa.Column("country", sa.String(), nullable=True))
    op.add_column("farm", sa.Column("state", sa.String(), nullable=True))
    op.alter_column("farm_crop", "sowing_date", existing_type=sa.DATE(), nullable=False)
    op.alter_column("farm_crop", "season", existing_type=sa.INTEGER(), nullable=False)
    op.create_geospatial_index(  # type: ignore
        "idx_scoutings_geometry",
        "scoutings",
        ["geometry"],
        unique=False,
        postgresql_using="gist",
        postgresql_ops={},
    )
    op.create_index(op.f("ix_scoutings_id"), "scoutings", ["id"], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_scoutings_id"), table_name="scoutings")
    op.drop_geospatial_index(  # type: ignore
        "idx_scoutings_geometry",
        table_name="scoutings",
        postgresql_using="gist",
        column_name="geometry",
    )
    op.alter_column("farm_crop", "season", existing_type=sa.INTEGER(), nullable=True)
    op.alter_column("farm_crop", "sowing_date", existing_type=sa.DATE(), nullable=True)
    op.drop_column("farm", "state")
    op.drop_column("farm", "country")
    op.alter_column("crop_stages", "tasks", existing_type=sa.VARCHAR(), nullable=True)
    op.alter_column("crop_stages", "stages", existing_type=sa.VARCHAR(), nullable=True)
    op.drop_index(op.f("ix_companies_id"), table_name="companies")
    op.drop_index(op.f("ix_companies_email"), table_name="companies")
    op.alter_column("calendar_data", "farm", existing_type=sa.VARCHAR(), nullable=False)
    op.drop_index(op.f("ix_states_id"), table_name="states")
    op.drop_geospatial_index(  # type: ignore
        "idx_states_geom",
        table_name="states",
        postgresql_using="gist",
        column_name="geom",
    )
    op.drop_geospatial_table("states")  # type: ignore
    # ### end Alembic commands ###
